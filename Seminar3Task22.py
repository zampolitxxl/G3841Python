# # Задача 22: Даны два неупорядоченных 
# набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# # Пользователь вводит 2 числа. n - кол-во элементов первого множества. 
# m - кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.


#Создаем первый список

import random
n = int(input("Введите, какое количество элементов в 1 списке"))

list_1 = list() # создание пустого списка
for i in range(n): # цикл выполнится  range n раз
    n = random.randint(0, 10) # интервал случайных чисел
    list_1.append(n) # сохранение элемента в конец списка

print(list_1)#  печатаем спсиок

#Создаем второй  список

import random
m = int(input("Введите, какое количество элементов в 2 списке"))

list_2 = list() # создание пустого списка
for i in range(m): # цикл выполнится  range n раз
    m = random.randint(0, 10) # интервал случайных чисел
    list_2.append(m) # сохранение элемента в конец списка

print(list_2)#  печатаем спсиок

#нужно избавиться от повторов в каждом спике для этого преобразуем их в сеты
#1 сет
list_1_set=set(list_1)
print(f"сет из списка 1 ={list_1_set}")
#2 сет
list_2_set=set(list_2)
print(f"сет из списка 2 ={list_2_set}")
#теперь обратно приобразуем их в список


list_1_new=list(list_1_set)
print(f"список 1 без дублей ={list_1_new}")

list_2_new=list(list_2_set)
print(f"список 2 без дублей ={list_2_new}")





#нужно создать общий список

list_3=list_1_new+list_2_new
print(f"общий список ={list_3}")


# нужно создать новый список из повторяющихся элементов-сет чтобы по одному было

#создаем лист 4, проходим по листу 3. Проверяем каждый элемент листа 3, есть ли он в листе 4 .
# если нет доьавляем  если есть добавляем в лист 5 лист 5 и будет пересечением
list_4 = list() # создание пустого списка
list_5 = list() # создание пустого списка пересекающихся элементов
for i in list_3:
    if i not in list_4:
        list_4.append(i)
    else:
        list_5.append(i)
print(f"итоговый список с пересекающимися элементами ={list_5}")







# последний нужно отсортировать

